package monster;

import java.util.Vector;

import javax.swing.JFrame;

import SpriteSheet.SpriteSheet;
import character.Isaac;
import objectSize.IsaacSize;
import objectSize.ViewDirect;
import objectSize.WormSize;
import structure.Rock;

public class Worm extends Monster {
	private final static String GUBUN = "Worm : ";

	public Worm(JFrame app, Isaac isaac, Vector<Rock> rock, String url, int imgWidth, int imgHeight) {
		super(app, isaac, rock, url, imgWidth, imgHeight);
		init();
		setting();
		batch();
		new Thread(new Runnable() {
		@Override
		public void run() {
			while(!isDead()) {
				moveDirectCheck();
				collisionRock();
				moveUp();
				moveDown();
				moveRight();
				moveLeft();
				moveMotion();
				getMonster().drawObject(getXChar(), getYChar());
				try {
					Thread.sleep(30);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				if(isAttacking() == false) {
					attack();
				}
			}
		}
	}).start();
	}
	public void init() {
		setMonster(new SpriteSheet(getUrl(), "monster", 0, 0, getImgWidth(), getImgHeight())); 
	}
	public void setting() {
		setViewDirect(ViewDirect.RIGHT);
		setXChar(180);
		setYChar(130);	
		setLife(10);
		setAttackDamge(1);
	}
	public void batch() {
		getMonster().drawObject(getXChar(), getYChar());
		getApp().add(getMonster(), 0);
	}
	public void moveDirectCheck() {
		// 오른쪽 
		if(getXChar() + WormSize.WIDTH < getIsaac().getXChar() + 15) {
			setRight(true);
		} else {
			setRight(false);
		}
		// 왼쪽
		if(getXChar() > getIsaac().getXChar() + IsaacSize.HEADWIDTH - 15) {
			setLeft(true);
		} else {
			setLeft(false);
		}
		// 아래쪽
		if(getYChar() + WormSize.HEIGHT < getIsaac().getYChar() + 15) {
			setDown(true);
		}else {
			setDown(false);
		}
		// 위쪽
		if(getYChar() > getIsaac().getYChar() + IsaacSize.HEADHEIGHT ) {
			setUp(true);
		}else {
			setUp(false);
		}
			
	}
}
